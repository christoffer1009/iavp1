{
  "version": 3,
  "sources": ["../algoritmoOLD.ts"],
  "sourcesContent": ["// ********** DESCONSIDERAR **********\n\nimport { TreeNode } from \"./TreeNode\";\n\nexport const encontra = (n: TreeNode, objetivo: string): TreeNode[] => {\n  const visitados: TreeNode[] = []; //LNE\n  const descobertos: TreeNode[] = []; //LE\n  const caminhoMorto: TreeNode[] = []; //BSS\n  let atual: TreeNode = n; //EC  \n  \n  type passo = {\n    passo: number;\n    visitados: string[];\n    descobertos: string[];\n    caminhoMorto: string[];\n    atual: string;\n  };\n  const passos: passo[] = [];\n  let count = 0;\n\n  //inicio\n  descobertos.push(atual);\n\n  while (descobertos.length > 0) {\n  \n    passos.push({\n      passo: count,\n      visitados: visitados.map((x) => x.id),\n      descobertos: descobertos.map((x) => x.id),\n      caminhoMorto: caminhoMorto.map((x) => x.id),\n      atual: atual.id,\n    });\n\n    if (atual.id == objetivo) {\n      visitados.push(atual);\n      console.log(\"FIM SUCESSO\\n\", passos);\n      return visitados;\n    }\n\n    //descoberto mas n\u00E3o explorado\n    if (descobertos.includes(atual) && !visitados.includes(atual)) {\n      if (atual.filhos.length > 0 ) {\n        //coloca filhos em descobertos\n        atual.filhos.forEach((x) => {\n          if (!caminhoMorto.includes(x))\n            descobertos.unshift(x);\n        });\n\n        visitados.push(atual);\n\n      } else {\n        //n\u00E3o tem filhos\n        descobertos.shift();\n        caminhoMorto.push(atual);\n      }\n      //pr\u00F3ximo descoberto\n      atual = descobertos[0];\n\n      //descoberto e explorado\n    } else if (descobertos.includes(atual) && visitados.includes(atual)) {\n      caminhoMorto.push(atual);\n      descobertos.shift();\n      visitados.pop();\n      //pr\u00F3ximo\n      atual = descobertos[0];\n    }\n\n    count++;\n  }\n\n  console.log(\"FALHA\", passos)\n  return visitados;\n};"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAIO,MAAM,WAAW,CAAC,GAAa,aAAiC;AACrE,QAAM,YAAwB,CAAC;AAC/B,QAAM,cAA0B,CAAC;AACjC,QAAM,eAA2B,CAAC;AAClC,MAAI,QAAkB;AAStB,QAAM,SAAkB,CAAC;AACzB,MAAI,QAAQ;AAGZ,cAAY,KAAK,KAAK;AAEtB,SAAO,YAAY,SAAS,GAAG;AAE7B,WAAO,KAAK;AAAA,MACV,OAAO;AAAA,MACP,WAAW,UAAU,IAAI,CAAC,MAAM,EAAE,EAAE;AAAA,MACpC,aAAa,YAAY,IAAI,CAAC,MAAM,EAAE,EAAE;AAAA,MACxC,cAAc,aAAa,IAAI,CAAC,MAAM,EAAE,EAAE;AAAA,MAC1C,OAAO,MAAM;AAAA,IACf,CAAC;AAED,QAAI,MAAM,MAAM,UAAU;AACxB,gBAAU,KAAK,KAAK;AACpB,cAAQ,IAAI,iBAAiB,MAAM;AACnC,aAAO;AAAA,IACT;AAGA,QAAI,YAAY,SAAS,KAAK,KAAK,CAAC,UAAU,SAAS,KAAK,GAAG;AAC7D,UAAI,MAAM,OAAO,SAAS,GAAI;AAE5B,cAAM,OAAO,QAAQ,CAAC,MAAM;AAC1B,cAAI,CAAC,aAAa,SAAS,CAAC;AAC1B,wBAAY,QAAQ,CAAC;AAAA,QACzB,CAAC;AAED,kBAAU,KAAK,KAAK;AAAA,MAEtB,OAAO;AAEL,oBAAY,MAAM;AAClB,qBAAa,KAAK,KAAK;AAAA,MACzB;AAEA,cAAQ,YAAY;AAAA,IAGtB,WAAW,YAAY,SAAS,KAAK,KAAK,UAAU,SAAS,KAAK,GAAG;AACnE,mBAAa,KAAK,KAAK;AACvB,kBAAY,MAAM;AAClB,gBAAU,IAAI;AAEd,cAAQ,YAAY;AAAA,IACtB;AAEA;AAAA,EACF;AAEA,UAAQ,IAAI,SAAS,MAAM;AAC3B,SAAO;AACT;",
  "names": []
}
